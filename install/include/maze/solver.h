// Generated by gencpp from file maze/solver.msg
// DO NOT EDIT!


#ifndef MAZE_MESSAGE_SOLVER_H
#define MAZE_MESSAGE_SOLVER_H

#include <ros/service_traits.h>


#include <maze/solverRequest.h>
#include <maze/solverResponse.h>


namespace maze
{

struct solver
{

typedef solverRequest Request;
typedef solverResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct solver
} // namespace maze


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::maze::solver > {
  static const char* value()
  {
    return "5d821c29b15d91578a95e40c5ed91b99";
  }

  static const char* value(const ::maze::solver&) { return value(); }
};

template<>
struct DataType< ::maze::solver > {
  static const char* value()
  {
    return "maze/solver";
  }

  static const char* value(const ::maze::solver&) { return value(); }
};


// service_traits::MD5Sum< ::maze::solverRequest> should match 
// service_traits::MD5Sum< ::maze::solver > 
template<>
struct MD5Sum< ::maze::solverRequest>
{
  static const char* value()
  {
    return MD5Sum< ::maze::solver >::value();
  }
  static const char* value(const ::maze::solverRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::maze::solverRequest> should match 
// service_traits::DataType< ::maze::solver > 
template<>
struct DataType< ::maze::solverRequest>
{
  static const char* value()
  {
    return DataType< ::maze::solver >::value();
  }
  static const char* value(const ::maze::solverRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::maze::solverResponse> should match 
// service_traits::MD5Sum< ::maze::solver > 
template<>
struct MD5Sum< ::maze::solverResponse>
{
  static const char* value()
  {
    return MD5Sum< ::maze::solver >::value();
  }
  static const char* value(const ::maze::solverResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::maze::solverResponse> should match 
// service_traits::DataType< ::maze::solver > 
template<>
struct DataType< ::maze::solverResponse>
{
  static const char* value()
  {
    return DataType< ::maze::solver >::value();
  }
  static const char* value(const ::maze::solverResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MAZE_MESSAGE_SOLVER_H
