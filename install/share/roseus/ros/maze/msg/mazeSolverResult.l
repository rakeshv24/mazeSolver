;; Auto-generated. Do not edit!


(when (boundp 'maze::mazeSolverResult)
  (if (not (find-package "MAZE"))
    (make-package "MAZE"))
  (shadow 'mazeSolverResult (find-package "MAZE")))
(unless (find-package "MAZE::MAZESOLVERRESULT")
  (make-package "MAZE::MAZESOLVERRESULT"))

(in-package "ROS")
;;//! \htmlinclude mazeSolverResult.msg.html


(defclass maze::mazeSolverResult
  :super ros::object
  :slots (_success ))

(defmethod maze::mazeSolverResult
  (:init
   (&key
    ((:success __success) "")
    )
   (send-super :init)
   (setq _success (string __success))
   self)
  (:success
   (&optional __success)
   (if __success (setq _success __success)) _success)
  (:serialization-length
   ()
   (+
    ;; string _success
    4 (length _success)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _success
       (write-long (length _success) s) (princ _success s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _success
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _success (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get maze::mazeSolverResult :md5sum-) "6563811f75f3715f19a981f2cc0a3560")
(setf (get maze::mazeSolverResult :datatype-) "maze/mazeSolverResult")
(setf (get maze::mazeSolverResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string success

")



(provide :maze/mazeSolverResult "6563811f75f3715f19a981f2cc0a3560")


